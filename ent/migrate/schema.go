// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BlocksColumns holds the columns for the "blocks" table.
	BlocksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "block_reports", Type: field.TypeInt, Default: 0},
		{Name: "unblock_reports", Type: field.TypeInt, Default: 0},
		{Name: "last_reported_at", Type: field.TypeTime},
		{Name: "isp_id", Type: field.TypeInt},
		{Name: "site_id", Type: field.TypeInt},
	}
	// BlocksTable holds the schema information for the "blocks" table.
	BlocksTable = &schema.Table{
		Name:       "blocks",
		Columns:    BlocksColumns,
		PrimaryKey: []*schema.Column{BlocksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "blocks_isps_isp_blocks",
				Columns:    []*schema.Column{BlocksColumns[6]},
				RefColumns: []*schema.Column{IspsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "blocks_sites_blocks",
				Columns:    []*schema.Column{BlocksColumns[7]},
				RefColumns: []*schema.Column{SitesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "blocks_site_id_isp_id",
				Unique:  true,
				Columns: []*schema.Column{BlocksColumns[7], BlocksColumns[6]},
			},
		},
	}
	// CountersColumns holds the columns for the "counters" table.
	CountersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "count", Type: field.TypeInt, Default: 0},
	}
	// CountersTable holds the schema information for the "counters" table.
	CountersTable = &schema.Table{
		Name:       "counters",
		Columns:    CountersColumns,
		PrimaryKey: []*schema.Column{CountersColumns[0]},
	}
	// IspsColumns holds the columns for the "isps" table.
	IspsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "latitude", Type: field.TypeFloat64},
		{Name: "longitude", Type: field.TypeFloat64},
		{Name: "name", Type: field.TypeString},
	}
	// IspsTable holds the schema information for the "isps" table.
	IspsTable = &schema.Table{
		Name:       "isps",
		Columns:    IspsColumns,
		PrimaryKey: []*schema.Column{IspsColumns[0]},
	}
	// SitesColumns holds the columns for the "sites" table.
	SitesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "domain", Type: field.TypeString, Unique: true},
	}
	// SitesTable holds the schema information for the "sites" table.
	SitesTable = &schema.Table{
		Name:       "sites",
		Columns:    SitesColumns,
		PrimaryKey: []*schema.Column{SitesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "sites_domain",
				Unique:  true,
				Columns: []*schema.Column{SitesColumns[3]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BlocksTable,
		CountersTable,
		IspsTable,
		SitesTable,
	}
)

func init() {
	BlocksTable.ForeignKeys[0].RefTable = IspsTable
	BlocksTable.ForeignKeys[1].RefTable = SitesTable
}
